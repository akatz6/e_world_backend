// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id       Int       @id @default(autoincrement())
  username String    @unique
  email    String    @unique
  password String
  review   Review[]
  cart      Cart?
  
}

model Item {
  id          Int      @id @default(autoincrement())
  name        String   
  description String
  price Decimal
  review      Review[]
  
}

model Cart {
  id        Int        @id @default(autoincrement())
  userId    Int        @unique
  user      User       @relation(fields: [userId], references: [id])
  items  CartItem[]
  
}
model CartItem {
  id       Int    @id @default(autoincrement())
  cartId   Int
  itemId   Int @unique
  price    Float
 username     String
  cart     Cart   @relation(fields: [cartId], references: [id])
  @@unique([cartId, itemId]) // Ensure no duplicate items in the cart
}


model Review {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  rating    Int
  text      String
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  item      Item      @relation(fields: [itemId], references: [id], onDelete: Cascade)
  itemId    Int
 
 
}
